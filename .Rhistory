# top ten country of origins
view(florida %>% arrange(desc(FLORIDA)))
met_region <- read.csv("out/final tables/appendix-table-10.csv")
# FL
fl <- met_region %>% filter(grepl("FL", MET2013_NAME))
View(as.data.frame(fl))
4917 + 7896 + 5819+ 9651 +10822 + 7681 + 11848+ 10863 + 7087
View(florida)
130666 +31039 + 30296 +21991
130666 +31039 + 30296 +21991 + 20231 + 13726
2698967/14278164
627765/14278164
627765/2698967
# =======
# SET UP
# =======
library(tidyverse)
# DATASETS from by_state_natz.R
temp <- read.csv('out/Natz_CountryBirth_by_State.csv')
by_regions <- read.csv("out/natz_by_state_regions.csv")
##### USCIS DATA #####
# Read in USCIS data
nc <- temp %>% select("Region.Name", "country_birth", "NORTH CAROLINA") %>%
subset(!is.na(Region.Name))
##### USCIS DATA #####
# Read in USCIS data
nc <- temp %>% select("Region.Name", "country_birth", "NORTH.CAROLINA") %>%
subset(!is.na(Region.Name))
###### ACS DATA ######
# load acs data
if (!require("ipumsr")) stop("Reading IPUMS data into R requires the ipumsr package. It can be installed using the following command: install.packages('ipumsr')")
ddi <- read_ipums_ddi("data/usa_00012.xml")
data <- read_ipums_micro(ddi)
# add in occupation code names
occ_codes <- read.csv("data/occ-codes.csv")[1:9,]
category = c()
codes = c()
# add in occupation category names
for (i in 1:(length(occ_codes$Category))){
start = occ_codes$Start[i]
stop = occ_codes$Stop[i]
reps = stop-start + 1
category <- append(category, rep(occ_codes$Category[i], reps))
codes <- append(codes, start:stop)
}
occ_codes_clean <- data.frame(category, codes)
data <- data %>% left_join(occ_codes_clean, by = c("OCC" = "codes"))
# Subsets: ACS Data - Ohio,  ACS Data - Immigrants, ACS Data - Naturlized,
#           ACS Data - Newly Naturalized
acs_NC20 <- data %>% subset(YEAR == 2020 & STATEFIP == 12)
# Subsets: ACS Data - Ohio,  ACS Data - Immigrants, ACS Data - Naturlized,
#           ACS Data - Newly Naturalized
acs_NC20 <- data %>% subset(YEAR == 2020 & STATEFIP == 37)
acs_NC20_imm <- acs_NC20 %>% subset(BPL > 120)
acs_NC20_natz <- acs_NC20 %>% subset(CITIZEN == 2)
acs_NC20_newNatz <- acs_NC20_natz %>% subset(YRNATUR >=2016)
###### ANALYSIS ######
#============================================================================
# NORTH CAROLINA POPULATION COUNTS
#============================================================================
###### CALCULATE NUMBER OF IMMIGRANTS, TOTAL NATURALIZED IN NORTH CAROLINA ######
sum(acs_NC20$PERWT) # nc population
sum(acs_NC20_imm$PERWT) # number of immigrants in nc
sum(acs_NC20_natz$PERWT) # number of naturalized citizens in nc
sum(acs_NC20_newNatz$PERWT)  # number of newly naturalized citizens in nc
####### CALCULATE NUMBER ELIGIBLE FOR CITIZENSHIP ####################
eligible_citizen <- acs_NC20_imm %>% subset(CITIZEN %in% c(3, 4) & YRSUSA1 > 5)
sum(eligible_citizen$PERWT)
####### PRE-TAX WAGE CONTRIBUTIONS ####################
# get rid of 99999/99998 values representing N/A or Missing incomes
incwage <- (acs_NC20_imm %>% subset(INCWAGE < 999998))
sum(incwage$INCWAGE * incwage$PERWT)
#============================================================================
# NATURLIZATIONS BY WORLD REGION
#============================================================================
# Regional Breakdowns (source: USCIS)
n_newnatz = 429017
# DATASETS from by_state_natz.R
temp <- read.csv('out/Natz_CountryBirth_by_State.csv')
by_regions <- read.csv("out/natz_by_state_regions.csv")
##### USCIS DATA #####
# Read in USCIS data
nc <- temp %>% select("Region.Name", "country_birth", "NORTH.CAROLINA") %>%
subset(!is.na(Region.Name))
###### ACS DATA ######
# load acs data
if (!require("ipumsr")) stop("Reading IPUMS data into R requires the ipumsr package. It can be installed using the following command: install.packages('ipumsr')")
ddi <- read_ipums_ddi("data/usa_00012.xml")
data <- read_ipums_micro(ddi)
# add in occupation code names
occ_codes <- read.csv("data/occ-codes.csv")[1:9,]
category = c()
codes = c()
# add in occupation category names
for (i in 1:(length(occ_codes$Category))){
start = occ_codes$Start[i]
stop = occ_codes$Stop[i]
reps = stop-start + 1
category <- append(category, rep(occ_codes$Category[i], reps))
codes <- append(codes, start:stop)
}
occ_codes_clean <- data.frame(category, codes)
data <- data %>% left_join(occ_codes_clean, by = c("OCC" = "codes"))
# Subsets: ACS Data - Ohio,  ACS Data - Immigrants, ACS Data - Naturlized,
#           ACS Data - Newly Naturalized
acs_NC20 <- data %>% subset(YEAR == 2020 & STATEFIP == 37)
acs_NC20_imm <- acs_NC20 %>% subset(BPL > 120)
acs_NC20_natz <- acs_NC20 %>% subset(CITIZEN == 2)
acs_NC20_newNatz <- acs_NC20_natz %>% subset(YRNATUR >=2016)
###### ANALYSIS ######
#============================================================================
# NORTH CAROLINA POPULATION COUNTS
#============================================================================
###### CALCULATE NUMBER OF IMMIGRANTS, TOTAL NATURALIZED IN NORTH CAROLINA ######
sum(acs_NC20$PERWT) # nc population
sum(acs_NC20_imm$PERWT) # number of immigrants in nc
sum(acs_NC20_natz$PERWT) # number of naturalized citizens in nc
sum(acs_NC20_newNatz$PERWT)  # number of newly naturalized citizens in nc
####### CALCULATE NUMBER ELIGIBLE FOR CITIZENSHIP ####################
eligible_citizen <- acs_NC20_imm %>% subset(CITIZEN %in% c(3, 4) & YRSUSA1 > 5)
sum(eligible_citizen$PERWT)
####### PRE-TAX WAGE CONTRIBUTIONS ####################
# get rid of 99999/99998 values representing N/A or Missing incomes
incwage <- (acs_NC20_imm %>% subset(INCWAGE < 999998))
sum(incwage$INCWAGE * incwage$PERWT)
#============================================================================
# NATURLIZATIONS BY WORLD REGION
#============================================================================
# Regional Breakdowns (source: USCIS)
n_newnatz = 429017
natz_by_region <- as.data.frame(nc %>% group_by(Region.Name) %>% summarise(Freq = sum(`NORTH.CAROLINA)) %>%
mutate(Percentage = Freq/n_newnatz))
View(natz_by_region)
# top ten country of origins
view(nc %>% arrange(desc(NORTH.CAROLINA`)))
natz_by_region <- as.data.frame(nc %>% group_by(Region.Name) %>% summarise(Freq = sum(NORTH.CAROLINA)) %>%
mutate(Percentage = Freq/n_newnatz))
View(natz_by_region)
#============================================================================
# NATURLIZATIONS BY WORLD REGION
#============================================================================
# Regional Breakdowns (source: USCIS)
n_newnatz = 70579
natz_by_region <- as.data.frame(nc %>% group_by(Region.Name) %>% summarise(Freq = sum(NORTH.CAROLINA)) %>%
mutate(Percentage = Freq/n_newnatz))
View(natz_by_region)
# top ten country of origins
view(nc %>% arrange(desc(NORTH.CAROLINA`)))
# top ten country of origins
view(nc %>% arrange(desc(NORTH.CAROLINA)))
# top ten country of origins
View(nc %>% arrange(desc(NORTH.CAROLINA)))
)
safs
``
# top ten country of origins
View(nc %>% arrange(desc(NORTH.CAROLINA)))
# NC
nC <- met_region %>% filter(grepl("NC", MET2013_NAME))
View(as.data.frame(nC))
met_region <- read.csv("out/final tables/appendix-table-10.csv")
# NC
nC <- met_region %>% filter(grepl("NC", MET2013_NAME))
View(as.data.frame(nC))
View(as.data.frame(nC))
7803 + 6795
# =======
# SET UP
# =======
library(tidyverse)
# =======
# SET UP
# =======
library(tidyverse)
# DATASETS from by_state_natz.R
temp <- read.csv('out/Natz_CountryBirth_by_State.csv')
by_regions <- read.csv("out/natz_by_state_regions.csv")
##### USCIS DATA #####
# Read in USCIS data
wisconsin <- temp %>% select("Region.Name", "country_birth", "WISCONSIN") %>%
subset(!is.na(Region.Name))
###### ACS DATA ######
# load acs data
if (!require("ipumsr")) stop("Reading IPUMS data into R requires the ipumsr package. It can be installed using the following command: install.packages('ipumsr')")
ddi <- read_ipums_ddi("data/usa_00012.xml")
data <- read_ipums_micro(ddi)
# add in occupation code names
occ_codes <- read.csv("data/occ-codes.csv")[1:9,]
category = c()
codes = c()
# add in occupation category names
for (i in 1:(length(occ_codes$Category))){
start = occ_codes$Start[i]
stop = occ_codes$Stop[i]
reps = stop-start + 1
category <- append(category, rep(occ_codes$Category[i], reps))
codes <- append(codes, start:stop)
}
occ_codes_clean <- data.frame(category, codes)
data <- data %>% left_join(occ_codes_clean, by = c("OCC" = "codes"))
# Subsets: ACS Data - Ohio,  ACS Data - Immigrants, ACS Data - Naturlized,
#           ACS Data - Newly Naturalized
acs_WI20 <- data %>% subset(YEAR == 2020 & STATEFIP == 55)
acs_WI20_imm <- acs_WI20 %>% subset(BPL > 120)
acs_WI20_natz <- acs_WI20 %>% subset(CITIZEN == 2)
acs_WI20_newNatz <- acs_WI20_natz %>% subset(YRNATUR >=2016)
###### ANALYSIS ######
#============================================================================
# WISCONSIN POPULATION COUNTS
#============================================================================
###### CALCULATE NUMBER OF IMMIGRANTS, TOTAL NATURALIZED IN WISCONSIN ######
sum(acs_WI20$PERWT) # wisconsin population
sum(acs_WI20_imm$PERWT) # number of immigrants in wisconsin
sum(acs_WI20_natz$PERWT) # number of naturalized citizens in wisconsin
sum(acs_WI20_newNatz$PERWT)  # number of newly naturalized citizens in wisconsin
#============================================================================
# NATURLIZATIONS BY WORLD REGION
#============================================================================
# Regional Breakdowns (source: USCIS)
n_newnatz = 42976
natz_by_region <- as.data.frame(wisconsin %>% group_by(Region.Name) %>% summarise(Freq = sum(WISCONSIN)) %>%
mutate(Percentage = Freq/n_newnatz))
View(natz_by_region)
#============================================================================
# NATURLIZATIONS BY WORLD REGION
#============================================================================
# Regional Breakdowns (source: USCIS)
n_newnatz = 20953
natz_by_region <- as.data.frame(wisconsin %>% group_by(Region.Name) %>% summarise(Freq = sum(WISCONSIN)) %>%
mutate(Percentage = Freq/n_newnatz))
View(natz_by_region)
# top ten country of origins
view(wisconsin %>% arrange(desc(WISCONSIN)))
met_region <- read.csv("out/final tables/appendix-table-10.csv")
# WI
wi <- met_region %>% filter(grepl("WI", MET2013_NAME))
View(as.data.frame(wi))
View(as.data.frame(wi))
# =======
# SET UP
# =======
library(tidyverse)
# DATASETS from by_state_natz.R
temp <- read.csv('out/Natz_CountryBirth_by_State.csv')
by_regions <- read.csv("out/natz_by_state_regions.csv")
##### USCIS DATA #####
# Read in USCIS data
texas <- temp %>% select("Region.Name", "country_birth", "TEXAS") %>%
subset(!is.na(Region.Name))
###### ACS DATA ######
# load acs data
if (!require("ipumsr")) stop("Reading IPUMS data into R requires the ipumsr package. It can be installed using the following command: install.packages('ipumsr')")
ddi <- read_ipums_ddi("data/usa_00012.xml")
data <- read_ipums_micro(ddi)
# add in occupation code names
occ_codes <- read.csv("data/occ-codes.csv")[1:9,]
category = c()
codes = c()
# add in occupation category names
for (i in 1:(length(occ_codes$Category))){
start = occ_codes$Start[i]
stop = occ_codes$Stop[i]
reps = stop-start + 1
category <- append(category, rep(occ_codes$Category[i], reps))
codes <- append(codes, start:stop)
}
occ_codes_clean <- data.frame(category, codes)
data <- data %>% left_join(occ_codes_clean, by = c("OCC" = "codes"))
# Subsets: ACS Data - Ohio,  ACS Data - Immigrants, ACS Data - Naturlized,
#           ACS Data - Newly Naturalized
acs_TX20 <- data %>% subset(YEAR == 2020 & STATEFIP == 55)
acs_TX20_imm <- acs_TX20 %>% subset(BPL > 120)
acs_TX20_natz <- acs_TX20 %>% subset(CITIZEN == 2)
acs_TX20_newNatz <- acs_TX20_natz %>% subset(YRNATUR >=2016)
# Subsets: ACS Data - Ohio,  ACS Data - Immigrants, ACS Data - Naturlized,
#           ACS Data - Newly Naturalized
acs_TX20 <- data %>% subset(YEAR == 2020 & STATEFIP == 48)
acs_TX20_imm <- acs_TX20 %>% subset(BPL > 120)
acs_TX20_natz <- acs_TX20 %>% subset(CITIZEN == 2)
acs_TX20_newNatz <- acs_TX20_natz %>% subset(YRNATUR >=2016)
###### ANALYSIS ######
#============================================================================
# TEXAS POPULATION COUNTS
#============================================================================
###### CALCULATE NUMBER OF IMMIGRANTS, TOTAL NATURALIZED IN TEXAS ######
sum(acs_TX20$PERWT) # texas population
sum(acs_TX20_imm$PERWT) # number of immigrants in texas
sum(acs_TX20_natz$PERWT) # number of naturalized citizens in texas
sum(acs_TX20_newNatz$PERWT)  # number of newly naturalized citizens in texas
471340/2000521
2000521/5116457
####### CALCULATE NUMBER ELIGIBLE FOR CITIZENSHIP ####################
eligible_citizen <- acs_TX20_imm %>% subset(CITIZEN %in% c(3, 4) & YRSUSA1 > 5)
sum(eligible_citizen$PERWT)
#============================================================================
# NATURLIZATIONS BY WORLD REGION
#============================================================================
# Regional Breakdowns (source: USCIS)
n_newnatz = 20953
natz_by_region <- as.data.frame(texas %>% group_by(Region.Name) %>% summarise(Freq = sum(TEXAS)) %>%
mutate(Percentage = Freq/n_newnatz))
View(natz_by_region)
#============================================================================
# NATURLIZATIONS BY WORLD REGION
#============================================================================
# Regional Breakdowns (source: USCIS)
n_newnatz = 343799
natz_by_region <- as.data.frame(texas %>% group_by(Region.Name) %>% summarise(Freq = sum(TEXAS)) %>%
mutate(Percentage = Freq/n_newnatz))
View(natz_by_region)
# top ten country of origins
view(texas %>% arrange(desc(TEXAS)))
met_region <- read.csv("out/final tables/appendix-table-10.csv")
# TX
tx <- met_region %>% filter(grepl("TX", MET2013_NAME))
View(as.data.frame(tx))
29147 + 4270 + 2895 + 37037  + 13249
343,799/2000521
343799/2000521
471340/2000521
# =======
# SET UP
# =======
library(tidyverse)
# DATASETS from by_state_natz.R
temp <- read.csv('out/Natz_CountryBirth_by_State.csv')
by_regions <- read.csv("out/natz_by_state_regions.csv")
##### USCIS DATA #####
# Read in USCIS data
michigan <- temp %>% select("Region.Name", "country_birth", "MICHIGAN") %>%
subset(!is.na(Region.Name))
###### ACS DATA ######
# load acs data
if (!require("ipumsr")) stop("Reading IPUMS data into R requires the ipumsr package. It can be installed using the following command: install.packages('ipumsr')")
ddi <- read_ipums_ddi("data/usa_00012.xml")
data <- read_ipums_micro(ddi)
# add in occupation code names
occ_codes <- read.csv("data/occ-codes.csv")[1:9,]
category = c()
codes = c()
# add in occupation category names
for (i in 1:(length(occ_codes$Category))){
start = occ_codes$Start[i]
stop = occ_codes$Stop[i]
reps = stop-start + 1
category <- append(category, rep(occ_codes$Category[i], reps))
codes <- append(codes, start:stop)
}
occ_codes_clean <- data.frame(category, codes)
data <- data %>% left_join(occ_codes_clean, by = c("OCC" = "codes"))
# Subsets: ACS Data - Ohio,  ACS Data - Immigrants, ACS Data - Naturlized,
#           ACS Data - Newly Naturalized
acs_MI20 <- data %>% subset(YEAR == 2020 & STATEFIP == 48)
acs_MI20_imm <- acs_MI20 %>% subset(BPL > 120)
acs_MI20_natz <- acs_MI20 %>% subset(CITIZEN == 2)
acs_MI20_newNatz <- acs_MI20_natz %>% subset(YRNATUR >=2016)
###### ANALYSIS ######
#============================================================================
# MICHIGAN POPULATION COUNTS
#============================================================================
###### CALCULATE NUMBER OF IMMIGRANTS, TOTAL NATURALIZED IN MICHIGAN ######
sum(acs_MI20$PERWT) # michigan population
sum(acs_MI20_imm$PERWT) # number of immigrants in michigan
sum(acs_MI20_natz$PERWT) # number of naturalized citizens in michigan
sum(acs_MI20_newNatz$PERWT)  # number of newly naturalized citizens in michigan
# Subsets: ACS Data - Ohio,  ACS Data - Immigrants, ACS Data - Naturlized,
#           ACS Data - Newly Naturalized
acs_MI20 <- data %>% subset(YEAR == 2020 & STATEFIP == 26)
acs_MI20_imm <- acs_MI20 %>% subset(BPL > 120)
acs_MI20_natz <- acs_MI20 %>% subset(CITIZEN == 2)
acs_MI20_newNatz <- acs_MI20_natz %>% subset(YRNATUR >=2016)
###### ANALYSIS ######
#============================================================================
# MICHIGAN POPULATION COUNTS
#============================================================================
###### CALCULATE NUMBER OF IMMIGRANTS, TOTAL NATURALIZED IN MICHIGAN ######
sum(acs_MI20$PERWT) # michigan population
sum(acs_MI20_imm$PERWT) # number of immigrants in michigan
sum(acs_MI20_natz$PERWT) # number of naturalized citizens in michigan
sum(acs_MI20_newNatz$PERWT)  # number of newly naturalized citizens in michigan
###### ANALYSIS ######
#============================================================================
# MICHIGAN POPULATION COUNTS
#============================================================================
###### CALCULATE NUMBER OF IMMIGRANTS, TOTAL NATURALIZED IN MICHIGAN ######
sum(acs_MI20$PERWT) # michigan population
sum(acs_MI20_imm$PERWT) # number of immigrants in michigan
sum(acs_MI20_natz$PERWT) # number of naturalized citizens in michigan
sum(acs_MI20_newNatz$PERWT)  # number of newly naturalized citizens in michigan
####### CALCULATE NUMBER ELIGIBLE FOR CITIZENSHIP ####################
eligible_citizen <- acs_MI20_imm %>% subset(CITIZEN %in% c(3, 4) & YRSUSA1 > 5)
sum(eligible_citizen$PERWT)
####### PRE-TAX WAGE CONTRIBUTIONS ####################
# get rid of 99999/99998 values representing N/A or Missing incomes
incwage <- (acs_MI20_imm %>% subset(INCWAGE < 999998))
sum(incwage$INCWAGE * incwage$PERWT)
#============================================================================
# NATURLIZATIONS BY WORLD REGION
#============================================================================
# Regional Breakdowns (source: USCIS)
n_newnatz = 343799
natz_by_region <- as.data.frame(michigan %>% group_by(Region.Name) %>% summarise(Freq = sum(MICHIGAN)) %>%
mutate(Percentage = Freq/n_newnatz))
View(natz_by_region)
#============================================================================
# NATURLIZATIONS BY WORLD REGION
#============================================================================
# Regional Breakdowns (source: USCIS)
n_newnatz = 66177
natz_by_region <- as.data.frame(michigan %>% group_by(Region.Name) %>% summarise(Freq = sum(MICHIGAN)) %>%
mutate(Percentage = Freq/n_newnatz))
View(natz_by_region)
# top ten country of origins
view(michigan %>% arrange(desc(MICHIGAN)))
met_region <- read.csv("out/final tables/appendix-table-10.csv")
# MI
mi <- met_region %>% filter(grepl("MI", MET2013_NAME))
View(as.data.frame(mi))
# =======
# SET UP
# =======
library(tidyverse)
# DATASETS from by_state_natz.R
temp <- read.csv('out/Natz_CountryBirth_by_State.csv')
by_regions <- read.csv("out/natz_by_state_regions.csv")
##### USCIS DATA #####
# Read in USCIS data
virginia <- temp %>% select("Region.Name", "country_birth", "VIRGINIA") %>%
subset(!is.na(Region.Name))
###### ACS DATA ######
# load acs data
if (!require("ipumsr")) stop("Reading IPUMS data into R requires the ipumsr package. It can be installed using the following command: install.packages('ipumsr')")
ddi <- read_ipums_ddi("data/usa_00012.xml")
data <- read_ipums_micro(ddi)
# =======
# SET UP
# =======
library(tidyverse)
# DATASETS from by_state_natz.R
temp <- read.csv('out/Natz_CountryBirth_by_State.csv')
by_regions <- read.csv("out/natz_by_state_regions.csv")
##### USCIS DATA #####
# Read in USCIS data
virginia <- temp %>% select("Region.Name", "country_birth", "VIRGINIA") %>%
subset(!is.na(Region.Name))
###### ACS DATA ######
# load acs data
if (!require("ipumsr")) stop("Reading IPUMS data into R requires the ipumsr package. It can be installed using the following command: install.packages('ipumsr')")
ddi <- read_ipums_ddi("data/usa_00012.xml")
data <- read_ipums_micro(ddi)
# add in occupation code names
occ_codes <- read.csv("data/occ-codes.csv")[1:9,]
category = c()
codes = c()
# add in occupation category names
for (i in 1:(length(occ_codes$Category))){
start = occ_codes$Start[i]
stop = occ_codes$Stop[i]
reps = stop-start + 1
category <- append(category, rep(occ_codes$Category[i], reps))
codes <- append(codes, start:stop)
}
occ_codes_clean <- data.frame(category, codes)
data <- data %>% left_join(occ_codes_clean, by = c("OCC" = "codes"))
# Subsets: ACS Data - Ohio,  ACS Data - Immigrants, ACS Data - Naturlized,
#           ACS Data - Newly Naturalized
acs_VA20 <- data %>% subset(YEAR == 2020 & STATEFIP == 51)
acs_VA20_imm <- acs_VA20 %>% subset(BPL > 120)
acs_VA20_natz <- acs_VA20 %>% subset(CITIZEN == 2)
acs_VA20_newNatz <- acs_VA20_natz %>% subset(YRNATUR >=2016)
###### ANALYSIS ######
#============================================================================
# VIRGINIA POPULATION COUNTS
#============================================================================
###### CALCULATE NUMBER OF IMMIGRANTS, TOTAL NATURALIZED IN VIRGINIA ######
sum(acs_VA20$PERWT) # virginia population
sum(acs_VA20_imm$PERWT) # number of immigrants in virginia
sum(acs_VA20_natz$PERWT) # number of naturalized citizens in virginia
sum(acs_VA20_newNatz$PERWT)  # number of newly naturalized citizens in virginia
####### CALCULATE NUMBER ELIGIBLE FOR CITIZENSHIP ####################
eligible_citizen <- acs_VA20_imm %>% subset(CITIZEN %in% c(3, 4) & YRSUSA1 > 5)
sum(eligible_citizen$PERWT)
####### PRE-TAX WAGE CONTRIBUTIONS ####################
# get rid of 99999/99998 values representing N/A or Missing incomes
incwage <- (acs_VA20_imm %>% subset(INCWAGE < 999998))
sum(incwage$INCWAGE * incwage$PERWT)
#============================================================================
# NATURLIZATIONS BY WORLD REGION
#============================================================================
# Regional Breakdowns (source: USCIS)
n_newnatz = 343799
natz_by_region <- as.data.frame(virginia %>% group_by(Region.Name) %>% summarise(Freq = sum(VIRGINIA)) %>%
mutate(Percentage = Freq/n_newnatz))
View(natz_by_region)
#============================================================================
# NATURLIZATIONS BY WORLD REGION
#============================================================================
# Regional Breakdowns (source: USCIS)
n_newnatz = 101190
natz_by_region <- as.data.frame(virginia %>% group_by(Region.Name) %>% summarise(Freq = sum(VIRGINIA)) %>%
mutate(Percentage = Freq/n_newnatz))
View(natz_by_region)
# top ten country of origins
view(virginia %>% arrange(desc(VIRGINIA)))
met_region <- read.csv("out/final tables/appendix-table-10.csv")
# VA
va <- met_region %>% filter(grepl("VA", MET2013_NAME))
View(as.data.frame(va))
View(as.data.frame(va))
# VA
va <- met_region %>% filter(grepl("VA", MET2013_NAME))
View(as.data.frame(va))
